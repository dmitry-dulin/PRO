'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

require(['jquery', 'knockout', 'loader', 'viewElementParametersHelper', 'dataManager', 'EntityNavigationViewModel', 'entityApi', 'sessionApi'], function ($, ko, LoadManager, viewElementParametersHelper, DataManager, EntityNavigationViewModel, entityApi, sessionApi) {
  function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(locationSearch);return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }
  var currentMatchId = getParameterByName('matchId');viewElementParametersHelper.parameters().matchId = currentMatchId;var dataManager = DataManager.create();var entityNavigator = EntityNavigationViewModel.getSingleton();entityNavigator.ready.then(function () {
    var userEntity = entityNavigator.currentEntity();var userData = userEntity.data;var entityId = userData.id;var entityType = userEntity.entityType;sessionApi.getsession(currentMatchId).then(function (data) {
      var objDataFullReferee = parseMatchReferee(data);
      refereeListViewModel.sessionData(data);refereeListViewModel.selectedSession(currentMatchId);refereeListViewModel.setRefereeInfo(objDataFullReferee);
    }, function (error) {
      console.warn(error);
    });
  });$.when(entityApi.getgroups(true)).then(function (groups) {
    var fullTimeOfficials = "cb1a0499-8ef1-4301-87dc-69740d580e30",
        assistantReferee = "ddc49958-9195-4251-9555-fcbb5efc1971",
        fourthOfficials = "701876e1-5beb-4d2a-9b26-1b933ebfe627",
        MLS = "11d4309d-cc44-493e-8a42-221b225bd1e8";groups.forEach(function (group) {
      if (group.id === MLS) {
        (function () {
          var refereeArray = [];$.each(group.subjects, function (i, user) {
            var createReferee = new RefereeModel({ id: user.id, name: user.firstName + ' ' + user.lastName });refereeArray.push(createReferee);
          });refereeListViewModel.refereeListMLS(refereeArray);
        })();
      }
    });var groupMLSReferee = refereeListViewModel.refereeListMLS();var arrayCheckReferee = refereeListViewModel.setRefereeInfo();arrayCheckReferee.forEach(function (obj, i) {
      var referee = obj;console.log(referee);groupMLSReferee.forEach(function (obj, i) {
        var allReferee = obj.id();if (allReferee === referee.id) {
          if (referee.position === "Referee") {
            refereeListViewModel.selectedRefereeFullTime({ id: obj.id(), name: obj.name(), score: null, violations: null, color: null, disabled: ko.observable(true) });refereeListViewModel.updateList(obj.id(), refereeListViewModel.refereeListMLS);$(".drop-refereeFullTime").addClass("disabled");
          } else if (referee.position === "AR1") {
            refereeListViewModel.selectedRefereeAssistant({ id: obj.id(), name: obj.name(), score: null, violations: null, color: null, disabled: ko.observable(true) });refereeListViewModel.updateList(obj.id(), refereeListViewModel.refereeListMLS);$(".drop-refereeAssistant").addClass("disabled");
          } else if (referee.position === "AR2") {
            refereeListViewModel.selectedRefereeAssistantTwo({ id: obj.id(), name: obj.name(), score: null, violations: null, color: null, disabled: ko.observable(true) });refereeListViewModel.updateList(obj.id(), refereeListViewModel.refereeListMLS);$(".drop-refereeAssistantTwo").addClass("disabled");
          } else if (referee.position === "4th Official") {
            refereeListViewModel.selectedRefereeFourth({ id: obj.id(), name: obj.name(), score: null, violations: null, color: null, disabled: ko.observable(true) });refereeListViewModel.updateList(obj.id(), refereeListViewModel.refereeListMLS);$(".drop-refereeFourth").addClass("disabled");
          }
          if ($('.dropdown-toggle-a.disabled').length === 4) {
            $(".btn-success.control__link").addClass("disabled");
          }
        }
      });
    });
  });function parseMatchReferee(obj) {
    var parseMatchInfoReferee = [];obj.contacts.forEach(function (i) {
      if (i.contactId !== "30dee769-d11a-43ac-bade-1fdb77561537") {
        var statusReferee = undefined;if (i.data[1].lookupValues.length > 0) {
          statusReferee = i.data[1].lookupValues[0].value;if (statusReferee === "Accepted") {
            parseMatchInfoReferee.push({ id: i.contactId, position: i.data[0].lookupValues[0].value, status: statusReferee });
          }
        }
      }
    });return parseMatchInfoReferee;
  }

  var RefereeModel = function RefereeModel(data) {
    _classCallCheck(this, RefereeModel);

    var self = this;self.id = ko.observable(data.id);self.name = ko.observable(data.name);self.score = null;self.violations = null;self.color = null;self.disabled = ko.observable(false);
  };

  var SaveModelReferee = function SaveModelReferee(data) {
    _classCallCheck(this, SaveModelReferee);

    var self = this;self.contactId = data.id, self.contactType = 1, self.attachments = [], self.removedData = null, self.data = [{ "attributeDefinitionId": "c72177a1-9bcf-47d9-98d4-b7363aa610cc", "lookupValues": [{ "id": data.fieldId, "value": data.position, "index": data.index, "score": 0 }] }, { "attributeDefinitionId": "a95f5777-ea33-47e5-b546-a066eacb93a5", "lookupValues": [] }];
  };

  var RefereeListViewModel = function RefereeListViewModel() {
    _classCallCheck(this, RefereeListViewModel);

    var self = this;self.refereeListFullTime = ko.observableArray();self.refereeListAssistant = ko.observableArray();self.refereeListFourth = ko.observableArray();self.refereeListMLS = ko.observableArray();self.setRefereeInfo = ko.observableArray();self.selectedRefereeFullTime = ko.observable({ id: null, name: 'Select Referee', score: null, violations: null, color: null, disabled: null });self.selectedRefereeAssistant = ko.observable({ id: null, name: 'Select Referee', score: null, violations: null, color: null, disabled: null });self.selectedRefereeAssistantTwo = ko.observable({ id: null, name: 'Select Referee', score: null, violations: null, color: null, disabled: null });self.selectedRefereeFourth = ko.observable({ id: null, name: 'Select Referee', score: null, violations: null, color: null, disabled: null });self.sessionData = ko.observableArray();self.selectedSession = ko.observable();self.updateList = function (refereeId, refereeList) {
      for (var i = 0; i < refereeList().length; i++) {
        if (typeof refereeId === "function") {
          if (refereeList()[i].id() === refereeId()) {
            refereeList()[i].disabled(true);
          }
        } else {
          if (refereeList()[i].id() === refereeId) {
            refereeList()[i].disabled(true);
          }
        }
      }
      refereeList.valueHasMutated();
    };self.stopPropagationLink = function (data, event) {
      return event.stopPropagation();
    };self.saveReferee = function () {
      var objPutReferee = { referee: typeof self.selectedRefereeFullTime().id !== 'function' ? null : self.selectedRefereeFullTime().id(), assisstantReferee1: typeof self.selectedRefereeAssistant().id !== 'function' ? null : self.selectedRefereeAssistant().id(), assisstantReferee2: typeof self.selectedRefereeAssistantTwo().id !== 'function' ? null : self.selectedRefereeAssistantTwo().id(), official: typeof self.selectedRefereeFourth().id !== 'function' ? null : self.selectedRefereeFourth().id() };var arrayContactsReferee = self.sessionData().contacts;if (objPutReferee.referee) {
        arrayContactsReferee.push(new SaveModelReferee({ id: objPutReferee.referee, position: "Referee", fieldId: "d6096824-b26d-4c32-8dda-aa5fc863d6e8", index: 0 }));
      }
      if (objPutReferee.assisstantReferee1) {
        arrayContactsReferee.push(new SaveModelReferee({ id: objPutReferee.assisstantReferee1, position: "AR1", fieldId: "1c08ad74-4514-46e7-9730-119f37bcf364", index: 1 }));
      }
      if (objPutReferee.assisstantReferee2) {
        arrayContactsReferee.push(new SaveModelReferee({ id: objPutReferee.assisstantReferee2, position: "AR2", fieldId: "e0940c08-d8ce-48ff-84b6-c8e45ef3d5c3", index: 2 }));
      }
      if (objPutReferee.official) {
        arrayContactsReferee.push(new SaveModelReferee({ id: objPutReferee.official, position: "4th Official", fieldId: "ef729520-4e4c-4cac-842e-693c0c915d5a", index: 3 }));
      }
      console.log(self.sessionData());return new Promise(function (resolve, reject) {
        var sessionId = self.selectedSession();var data = ko.toJSON(self.sessionData());sessionApi.putsession(sessionId, data).then(function (response) {
          console.log("Changes has been saved");resolve(response);window.location.replace("https://pro6252.edge10online.com/view/pro-match-list");
        }, function (error) {
          alert(error);reject(error);
        });
      });
    };self.backHome = function () {
      return window.location.replace("https://pro6252.edge10online.com/view/pro-match-list");
    };self.refereeChangedFullTime = function (refereeId, refereeName, refereeScore, refereeViolations, refereeColor) {
      if (typeof self.selectedRefereeFullTime().id === 'function') {
        for (var i = 0; i < self.refereeListMLS().length; i++) {
          if (self.refereeListMLS()[i].id() === self.selectedRefereeFullTime().id()) {
            self.refereeListMLS()[i].disabled(false);
          }
        }
      }
      self.selectedRefereeFullTime({ id: refereeId, name: refereeName, score: refereeScore, violations: refereeViolations, color: refereeColor, disabled: ko.observable(true) });self.updateList(refereeId, self.refereeListMLS);
    };self.refereeChangedAssistant = function (refereeId, refereeName, refereeScore, refereeViolations, refereeColor) {
      if (typeof self.selectedRefereeAssistant().id === 'function') {
        for (var i = 0; i < self.refereeListMLS().length; i++) {
          if (self.refereeListMLS()[i].id() === self.selectedRefereeAssistant().id()) {
            self.refereeListMLS()[i].disabled(false);
          }
        }
      }
      self.selectedRefereeAssistant({ id: refereeId, name: refereeName, score: refereeScore, violations: refereeViolations, color: refereeColor, disabled: ko.observable(true) });self.updateList(refereeId, self.refereeListMLS);
    };self.refereeChangedAssistantTwo = function (refereeId, refereeName, refereeScore, refereeViolations, refereeColor) {
      if (typeof self.selectedRefereeAssistantTwo().id === 'function') {
        for (var i = 0; i < self.refereeListMLS().length; i++) {
          if (self.refereeListMLS()[i].id() === self.selectedRefereeAssistant().id()) {
            self.refereeListMLS()[i].disabled(false);
          }
        }
      }
      self.selectedRefereeAssistantTwo({ id: refereeId, name: refereeName, score: refereeScore, violations: refereeViolations, color: refereeColor, disabled: ko.observable(true) });self.updateList(refereeId, self.refereeListMLS);
    };self.refereeChangedFourth = function (refereeId, refereeName, refereeScore, refereeViolations, refereeColor) {
      if (typeof self.selectedRefereeFourth().id === 'function') {
        for (var i = 0; i < self.refereeListMLS().length; i++) {
          if (self.refereeListMLS()[i].id() === self.selectedRefereeFourth().id()) {
            self.refereeListMLS()[i].disabled(false);
          }
        }
      }
      self.selectedRefereeFourth({ id: refereeId, name: refereeName, score: refereeScore, violations: refereeViolations, color: refereeColor, disabled: ko.observable(true) });self.updateList(refereeId, self.refereeListMLS);
    };
  };

  ko.bindingHandlers.loadingWhen = { init: function init(element) {
      LoadManager.init(element);
    }, update: function update(element, valueAccessor) {
      LoadManager.update(element, valueAccessor);
    } };
  ko.bindingHandlers.dropDownScroll = { init: function init(element) {
      $(element).mCustomScrollbar({ axis: "y", scrollButtons: { scrollSpeed: 0 }, advanced: { updateOnContentResize: true, updateOnSelectorChange: true }, callbacks: { whileScrolling: function whileScrolling() {
            $(this).closest(".referee-list__wrapper").addClass('open');
          } } });
    } };
  var refereeListViewModel = new RefereeListViewModel();ko.applyBindings(refereeListViewModel, document.getElementById('referee-list'));
});